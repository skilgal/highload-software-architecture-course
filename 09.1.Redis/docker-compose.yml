version: '3.8'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
volumes:
  redis-master:
    driver: ${VOLUMES_DRIVER}
  redis-slave:
    driver: ${VOLUMES_DRIVER}
services:
  redis-master:
    build:
      context: ./docker/redis
    container_name: redis-master
    volumes:
      - ./volume/data/redis-master:/data
    ports:
      - "${REDIS_MASTER_PORT}:6379"
    networks:
      - backend
  redis-slave:
    image: redis:latest
    container_name: redis-slave
    command: "redis-server --slaveof redis-master ${REDIS_MASTER_PORT}"
    volumes:
      - ./volume/data/redis-slave:/data
    ports:
      - "${REDIS_SLAVE_PORT}:6379"
    depends_on:
      - "redis-master"
    networks:
      - backend
  php-fpm:
    build:
      context: ./docker/php-fpm
    container_name: php-fpm
    depends_on:
      - redis-master
      - redis-slave
    environment:
      - REDIS_HOST=${REDIS_MASTER_HOST}
      - REDIS_PORT=${REDIS_MASTER_PORT}
      - APP_ENV=${APP_ENV}
    expose:
      - "9000"
    volumes:
      - ./application:/var/www/html
    networks:
      - backend
  nginx:
    build:
      context: ./docker/nginx
      args:
        - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
    container_name: nginx
    restart: always
    volumes:
      - ./application:/var/www/html
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./volume/logs:/var/log
    depends_on:
      - php-fpm
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
    networks:
      - backend
      - frontend
